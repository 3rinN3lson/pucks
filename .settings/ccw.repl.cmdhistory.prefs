cmdhistory=["(run-pucks (agents) (settings))" "(user-proposals (active))" "(let [p (active)]\\n  (println \\"puck\:\\" p)\\n  (println \\"proposals\:\\" (user-proposals p)))" "(user)" "(relativize-position {\:position [700 400]} [100 400]})" "(relativize-position {\:position [700 400]} [100 400])" "(-v [700 400] [100 400])" "(-v [100 400] [700 400])" "(abs -2)" "(relativize-position {\:position [700 400]} [100 400])" "(range 100 701 200)" "(for [x (range 100 701 200)\\n          y (range 100 701 200)]\\n      (merge (beacon) {\:position [x y]\\n                       \:id [x y]}))" "(for [x (range 100 701 200)\\n          y (range 100 701 200)]\\n      {\:position [x y]\\n       \:id [x y]})" "(abs 1)" "(distance [100 400] [700 400])" "(relativize-position {\:position [100 100]} [0 0])" "(relativize-position {\:position [100 100]} [50 50])" "(relativize-position {\:position [100 100]} [25 25])" "(active)" "(+ 1 2)" "(type (filter even? (take 20 (range 50))))" "(type (apply list (filter even? (take 20 (range 50)))))" "(\:energy 1.2)" "(filter \:foo nil)" "(run-pucks (agents) (settings))" "(torpedo)" "(filter (fn [[k v]] (\=\= v true)) (torpedo))" "(filter (fn [[k v]] (\= v true)) (torpedo))" "(defn types [p]\\n  (map first (filter (fn [[k v]] (\= v true)) p)))" "(types (torpedo))" "(remove \:foo [\:bar \:foo \:baz \:foo])" "(defn remove-one\\n  \\"Returns sequence s without the first item for which predicate p is true.\\"\\n  [s p]\\n  (let [[without-item with-item] (split-with \#(not (p %)) s)]\\n    (concat without-item (rest with-item))))" "(defn remove-one\\n  \\"Returns sequence s without the first instance of item.\\"\\n  [s item]\\n  (let [[without-item with-item] (split-with \#(not (\= item %)) s)]\\n    (concat without-item (rest with-item))))" "(remove-one \:foo [\:bar \:foo \:baz \:foo \:bingo \:foo \:blah])" "(defn remove-one\\n  \\"Returns sequence s without the first instance of item.\\"\\n  [item s]\\n  (let [[without-item with-item] (split-with \#(not (\= item %)) s)]\\n    (concat without-item (rest with-item))))" "(remove-one \:foo [\:bar \:foo \:baz \:foo \:bingo \:foo \:blah])" "(remove-one \:fool [\:bar \:foo \:baz \:foo \:bingo \:foo \:blah])"]
eclipse.preferences.version=1
